"use strict";(self.webpackChunk_lyyti_design_system=self.webpackChunk_lyyti_design_system||[]).push([[8343],{"./stories/Inputs/Select.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ChildrenOptions:()=>ChildrenOptions,Default:()=>Default,Disabled:()=>Disabled,Error:()=>Error,HelperText:()=>HelperText,Large:()=>Large,MultipleSelect:()=>MultipleSelect,MultipleSelectCheckbox:()=>MultipleSelectCheckbox,MultipleSelectLargeWhite:()=>MultipleSelectLargeWhite,MultipleSelectOptionDescription:()=>MultipleSelectOptionDescription,MultipleSelectOptionDivider:()=>MultipleSelectOptionDivider,OptionDescription:()=>OptionDescription,OptionDivider:()=>OptionDivider,StartAdornment:()=>StartAdornment,White:()=>White,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _Default$parameters,_Default$parameters2,_Large$parameters,_Large$parameters2,_HelperText$parameter,_HelperText$parameter2,_Error$parameters,_Error$parameters2,_StartAdornment$param,_StartAdornment$param2,_OptionDivider$parame,_OptionDivider$parame2,_OptionDescription$pa,_OptionDescription$pa2,_Disabled$parameters,_Disabled$parameters2,_White$parameters,_White$parameters2,_ChildrenOptions$para,_ChildrenOptions$para2,_MultipleSelect$param,_MultipleSelect$param2,_MultipleSelectCheckb,_MultipleSelectCheckb2,_MultipleSelectOption,_MultipleSelectOption2,_MultipleSelectOption3,_MultipleSelectOption4,_MultipleSelectLargeW,_MultipleSelectLargeW2,_home_runner_work_lyyti_design_system_lyyti_design_system_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/defineProperty.js"),react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/next/dist/compiled/react/index.js"),_src_components_Select__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/Select.tsx"),_storybook_excludedParams__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./.storybook/excludedParams.ts"),_src__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/index.ts"),_src_icons__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/icons/index.ts"),__jsx=react__WEBPACK_IMPORTED_MODULE_0__.createElement;function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){(0,_home_runner_work_lyyti_design_system_lyyti_design_system_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_1__.Z)(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}const __WEBPACK_DEFAULT_EXPORT__={title:"Components/Inputs/Select",component:_src_components_Select__WEBPACK_IMPORTED_MODULE_2__.Z,parameters:{docs:{description:{component:"Select components are used for collecting user provided information from a list of options."}},backgrounds:{default:"light",values:[{name:"light",value:"#ffffff"},{name:"dark",value:"#045b56"}]},controls:{exclude:(0,_storybook_excludedParams__WEBPACK_IMPORTED_MODULE_5__.u)(["color"])}},args:{label:"Label",multiple:!1}};var SelectTemplate=function SelectTemplate(args){var _args$SelectProps,isMultiple=Boolean("SelectProps"in args&&(null===(_args$SelectProps=args.SelectProps)||void 0===_args$SelectProps?void 0:_args$SelectProps.multiple)),_useState=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(isMultiple?[0]:0),selectValue=_useState[0],setSelectValue=_useState[1];return args.value=selectValue,args.onChange=function(e){return setSelectValue(e.target.value)},args.options||(args.options=[{id:0,value:"Select..."},{id:1,value:"Option 1"},{id:2,value:"Option 2"},{id:3,value:"Option 3"},{id:4,value:"Option 4"}]),__jsx(_src_components_Select__WEBPACK_IMPORTED_MODULE_2__.Z,args)};SelectTemplate.displayName="SelectTemplate";var MultiSelectTemplate=function MultiSelectTemplate(args){return args.options||(args.options=[{id:0,value:"Select..."},{id:1,value:"Option 1"},{id:2,value:"Option 2"},{id:3,value:"Option 3"},{id:4,value:"Option 4"}]),__jsx(_src_components_Select__WEBPACK_IMPORTED_MODULE_2__.Z,args)};MultiSelectTemplate.displayName="MultiSelectTemplate";var Default=SelectTemplate.bind({});Default.args={};var Large=SelectTemplate.bind({});Large.args={margin:"normal"};var HelperText=SelectTemplate.bind({});HelperText.args={helperText:"Helper text"};var Error=SelectTemplate.bind({});Error.args={helperText:"Helper text",error:!0};var StartAdornment=SelectTemplate.bind({});StartAdornment.args={helperText:"Helper text",adornment:"Kg"};var OptionDivider=SelectTemplate.bind({});OptionDivider.args={helperText:"Helper text",optionDivider:!0};var OptionDescription=SelectTemplate.bind({});OptionDescription.args={helperText:"Helper text",options:[{id:0,value:"Select..."},{id:1,value:"Option 1",description:"lorem ipsum dolor"},{id:2,value:"Option 2",description:"lorem ipsum dolor"},{id:3,value:"Option 3",description:"lorem ipsum dolor"},{id:4,value:"Option 4",description:"lorem ipsum dolor"}]};var Disabled=SelectTemplate.bind({});Disabled.args={helperText:"Helper text",disabled:!0};var White=SelectTemplate.bind({});White.args={color:"white"},White.parameters={backgrounds:{default:"dark"}};var ChildrenOptions=SelectTemplate.bind({});ChildrenOptions.args={children:[{id:0,value:"Select..."},{id:1,value:"Option 1"},{id:2,value:"Option 2"},{id:3,value:"Option 3"},{id:4,value:"Option 4"}].map((function(_ref){var id=_ref.id,value=_ref.value;return __jsx(_src__WEBPACK_IMPORTED_MODULE_3__.sN,{key:id,value:id,sx:{display:"flex",alignItems:"center",columnGap:1}},__jsx(_src_icons__WEBPACK_IMPORTED_MODULE_4__.kI,null),__jsx(_src__WEBPACK_IMPORTED_MODULE_3__.ZT,{sx:{color:"text.secondary"}},value))}))};var MultipleSelect=MultiSelectTemplate.bind({});MultipleSelect.args={multiple:!0,placeholder:"Select",fullWidth:!0};var MultipleSelectCheckbox=SelectTemplate.bind({});MultipleSelectCheckbox.args={placeholder:"Select",fullWidth:!0,SelectProps:{multiple:!0},checkbox:!0};var MultipleSelectOptionDivider=MultiSelectTemplate.bind({});MultipleSelectOptionDivider.args={multiple:!0,placeholder:"Select",fullWidth:!0,optionDivider:!0};var MultipleSelectOptionDescription=MultiSelectTemplate.bind({});MultipleSelectOptionDescription.args={multiple:!0,placeholder:"Select",fullWidth:!0,options:[{id:0,value:"Select..."},{id:1,value:"Option 1",description:"lorem ipsum dolor"},{id:2,value:"Option 2",description:"lorem ipsum dolor"},{id:3,value:"Option 3",description:"lorem ipsum dolor"},{id:4,value:"Option 4",description:"lorem ipsum dolor"}]};var MultipleSelectLargeWhite=MultiSelectTemplate.bind({});MultipleSelectLargeWhite.args={multiple:!0,placeholder:"Select",fullWidth:!0,size:"medium",color:"white"},MultipleSelectLargeWhite.parameters={backgrounds:{default:"dark"}},Default.parameters=_objectSpread(_objectSpread({},Default.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_Default$parameters=Default.parameters)||void 0===_Default$parameters?void 0:_Default$parameters.docs),{},{source:_objectSpread({originalSource:"(args: SelectProps) => {\n  const isMultiple = Boolean('SelectProps' in args && args.SelectProps?.multiple);\n  const [selectValue, setSelectValue] = useState<Array<string | number> | string | number>(isMultiple ? [0] : 0);\n  args.value = selectValue;\n  args.onChange = (e: ChangeEvent<HTMLInputElement>) => setSelectValue(e.target.value);\n  if (!args.options) {\n    args.options = [{\n      id: 0,\n      value: 'Select...'\n    }, {\n      id: 1,\n      value: 'Option 1'\n    }, {\n      id: 2,\n      value: 'Option 2'\n    }, {\n      id: 3,\n      value: 'Option 3'\n    }, {\n      id: 4,\n      value: 'Option 4'\n    }];\n  }\n  return <Select {...args} />;\n}"},null===(_Default$parameters2=Default.parameters)||void 0===_Default$parameters2||null===(_Default$parameters2=_Default$parameters2.docs)||void 0===_Default$parameters2?void 0:_Default$parameters2.source)})}),Large.parameters=_objectSpread(_objectSpread({},Large.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_Large$parameters=Large.parameters)||void 0===_Large$parameters?void 0:_Large$parameters.docs),{},{source:_objectSpread({originalSource:"(args: SelectProps) => {\n  const isMultiple = Boolean('SelectProps' in args && args.SelectProps?.multiple);\n  const [selectValue, setSelectValue] = useState<Array<string | number> | string | number>(isMultiple ? [0] : 0);\n  args.value = selectValue;\n  args.onChange = (e: ChangeEvent<HTMLInputElement>) => setSelectValue(e.target.value);\n  if (!args.options) {\n    args.options = [{\n      id: 0,\n      value: 'Select...'\n    }, {\n      id: 1,\n      value: 'Option 1'\n    }, {\n      id: 2,\n      value: 'Option 2'\n    }, {\n      id: 3,\n      value: 'Option 3'\n    }, {\n      id: 4,\n      value: 'Option 4'\n    }];\n  }\n  return <Select {...args} />;\n}"},null===(_Large$parameters2=Large.parameters)||void 0===_Large$parameters2||null===(_Large$parameters2=_Large$parameters2.docs)||void 0===_Large$parameters2?void 0:_Large$parameters2.source)})}),HelperText.parameters=_objectSpread(_objectSpread({},HelperText.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_HelperText$parameter=HelperText.parameters)||void 0===_HelperText$parameter?void 0:_HelperText$parameter.docs),{},{source:_objectSpread({originalSource:"(args: SelectProps) => {\n  const isMultiple = Boolean('SelectProps' in args && args.SelectProps?.multiple);\n  const [selectValue, setSelectValue] = useState<Array<string | number> | string | number>(isMultiple ? [0] : 0);\n  args.value = selectValue;\n  args.onChange = (e: ChangeEvent<HTMLInputElement>) => setSelectValue(e.target.value);\n  if (!args.options) {\n    args.options = [{\n      id: 0,\n      value: 'Select...'\n    }, {\n      id: 1,\n      value: 'Option 1'\n    }, {\n      id: 2,\n      value: 'Option 2'\n    }, {\n      id: 3,\n      value: 'Option 3'\n    }, {\n      id: 4,\n      value: 'Option 4'\n    }];\n  }\n  return <Select {...args} />;\n}"},null===(_HelperText$parameter2=HelperText.parameters)||void 0===_HelperText$parameter2||null===(_HelperText$parameter2=_HelperText$parameter2.docs)||void 0===_HelperText$parameter2?void 0:_HelperText$parameter2.source)})}),Error.parameters=_objectSpread(_objectSpread({},Error.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_Error$parameters=Error.parameters)||void 0===_Error$parameters?void 0:_Error$parameters.docs),{},{source:_objectSpread({originalSource:"(args: SelectProps) => {\n  const isMultiple = Boolean('SelectProps' in args && args.SelectProps?.multiple);\n  const [selectValue, setSelectValue] = useState<Array<string | number> | string | number>(isMultiple ? [0] : 0);\n  args.value = selectValue;\n  args.onChange = (e: ChangeEvent<HTMLInputElement>) => setSelectValue(e.target.value);\n  if (!args.options) {\n    args.options = [{\n      id: 0,\n      value: 'Select...'\n    }, {\n      id: 1,\n      value: 'Option 1'\n    }, {\n      id: 2,\n      value: 'Option 2'\n    }, {\n      id: 3,\n      value: 'Option 3'\n    }, {\n      id: 4,\n      value: 'Option 4'\n    }];\n  }\n  return <Select {...args} />;\n}"},null===(_Error$parameters2=Error.parameters)||void 0===_Error$parameters2||null===(_Error$parameters2=_Error$parameters2.docs)||void 0===_Error$parameters2?void 0:_Error$parameters2.source)})}),StartAdornment.parameters=_objectSpread(_objectSpread({},StartAdornment.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_StartAdornment$param=StartAdornment.parameters)||void 0===_StartAdornment$param?void 0:_StartAdornment$param.docs),{},{source:_objectSpread({originalSource:"(args: SelectProps) => {\n  const isMultiple = Boolean('SelectProps' in args && args.SelectProps?.multiple);\n  const [selectValue, setSelectValue] = useState<Array<string | number> | string | number>(isMultiple ? [0] : 0);\n  args.value = selectValue;\n  args.onChange = (e: ChangeEvent<HTMLInputElement>) => setSelectValue(e.target.value);\n  if (!args.options) {\n    args.options = [{\n      id: 0,\n      value: 'Select...'\n    }, {\n      id: 1,\n      value: 'Option 1'\n    }, {\n      id: 2,\n      value: 'Option 2'\n    }, {\n      id: 3,\n      value: 'Option 3'\n    }, {\n      id: 4,\n      value: 'Option 4'\n    }];\n  }\n  return <Select {...args} />;\n}"},null===(_StartAdornment$param2=StartAdornment.parameters)||void 0===_StartAdornment$param2||null===(_StartAdornment$param2=_StartAdornment$param2.docs)||void 0===_StartAdornment$param2?void 0:_StartAdornment$param2.source)})}),OptionDivider.parameters=_objectSpread(_objectSpread({},OptionDivider.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_OptionDivider$parame=OptionDivider.parameters)||void 0===_OptionDivider$parame?void 0:_OptionDivider$parame.docs),{},{source:_objectSpread({originalSource:"(args: SelectProps) => {\n  const isMultiple = Boolean('SelectProps' in args && args.SelectProps?.multiple);\n  const [selectValue, setSelectValue] = useState<Array<string | number> | string | number>(isMultiple ? [0] : 0);\n  args.value = selectValue;\n  args.onChange = (e: ChangeEvent<HTMLInputElement>) => setSelectValue(e.target.value);\n  if (!args.options) {\n    args.options = [{\n      id: 0,\n      value: 'Select...'\n    }, {\n      id: 1,\n      value: 'Option 1'\n    }, {\n      id: 2,\n      value: 'Option 2'\n    }, {\n      id: 3,\n      value: 'Option 3'\n    }, {\n      id: 4,\n      value: 'Option 4'\n    }];\n  }\n  return <Select {...args} />;\n}"},null===(_OptionDivider$parame2=OptionDivider.parameters)||void 0===_OptionDivider$parame2||null===(_OptionDivider$parame2=_OptionDivider$parame2.docs)||void 0===_OptionDivider$parame2?void 0:_OptionDivider$parame2.source)})}),OptionDescription.parameters=_objectSpread(_objectSpread({},OptionDescription.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_OptionDescription$pa=OptionDescription.parameters)||void 0===_OptionDescription$pa?void 0:_OptionDescription$pa.docs),{},{source:_objectSpread({originalSource:"(args: SelectProps) => {\n  const isMultiple = Boolean('SelectProps' in args && args.SelectProps?.multiple);\n  const [selectValue, setSelectValue] = useState<Array<string | number> | string | number>(isMultiple ? [0] : 0);\n  args.value = selectValue;\n  args.onChange = (e: ChangeEvent<HTMLInputElement>) => setSelectValue(e.target.value);\n  if (!args.options) {\n    args.options = [{\n      id: 0,\n      value: 'Select...'\n    }, {\n      id: 1,\n      value: 'Option 1'\n    }, {\n      id: 2,\n      value: 'Option 2'\n    }, {\n      id: 3,\n      value: 'Option 3'\n    }, {\n      id: 4,\n      value: 'Option 4'\n    }];\n  }\n  return <Select {...args} />;\n}"},null===(_OptionDescription$pa2=OptionDescription.parameters)||void 0===_OptionDescription$pa2||null===(_OptionDescription$pa2=_OptionDescription$pa2.docs)||void 0===_OptionDescription$pa2?void 0:_OptionDescription$pa2.source)})}),Disabled.parameters=_objectSpread(_objectSpread({},Disabled.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_Disabled$parameters=Disabled.parameters)||void 0===_Disabled$parameters?void 0:_Disabled$parameters.docs),{},{source:_objectSpread({originalSource:"(args: SelectProps) => {\n  const isMultiple = Boolean('SelectProps' in args && args.SelectProps?.multiple);\n  const [selectValue, setSelectValue] = useState<Array<string | number> | string | number>(isMultiple ? [0] : 0);\n  args.value = selectValue;\n  args.onChange = (e: ChangeEvent<HTMLInputElement>) => setSelectValue(e.target.value);\n  if (!args.options) {\n    args.options = [{\n      id: 0,\n      value: 'Select...'\n    }, {\n      id: 1,\n      value: 'Option 1'\n    }, {\n      id: 2,\n      value: 'Option 2'\n    }, {\n      id: 3,\n      value: 'Option 3'\n    }, {\n      id: 4,\n      value: 'Option 4'\n    }];\n  }\n  return <Select {...args} />;\n}"},null===(_Disabled$parameters2=Disabled.parameters)||void 0===_Disabled$parameters2||null===(_Disabled$parameters2=_Disabled$parameters2.docs)||void 0===_Disabled$parameters2?void 0:_Disabled$parameters2.source)})}),White.parameters=_objectSpread(_objectSpread({},White.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_White$parameters=White.parameters)||void 0===_White$parameters?void 0:_White$parameters.docs),{},{source:_objectSpread({originalSource:"(args: SelectProps) => {\n  const isMultiple = Boolean('SelectProps' in args && args.SelectProps?.multiple);\n  const [selectValue, setSelectValue] = useState<Array<string | number> | string | number>(isMultiple ? [0] : 0);\n  args.value = selectValue;\n  args.onChange = (e: ChangeEvent<HTMLInputElement>) => setSelectValue(e.target.value);\n  if (!args.options) {\n    args.options = [{\n      id: 0,\n      value: 'Select...'\n    }, {\n      id: 1,\n      value: 'Option 1'\n    }, {\n      id: 2,\n      value: 'Option 2'\n    }, {\n      id: 3,\n      value: 'Option 3'\n    }, {\n      id: 4,\n      value: 'Option 4'\n    }];\n  }\n  return <Select {...args} />;\n}"},null===(_White$parameters2=White.parameters)||void 0===_White$parameters2||null===(_White$parameters2=_White$parameters2.docs)||void 0===_White$parameters2?void 0:_White$parameters2.source)})}),ChildrenOptions.parameters=_objectSpread(_objectSpread({},ChildrenOptions.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_ChildrenOptions$para=ChildrenOptions.parameters)||void 0===_ChildrenOptions$para?void 0:_ChildrenOptions$para.docs),{},{source:_objectSpread({originalSource:"(args: SelectProps) => {\n  const isMultiple = Boolean('SelectProps' in args && args.SelectProps?.multiple);\n  const [selectValue, setSelectValue] = useState<Array<string | number> | string | number>(isMultiple ? [0] : 0);\n  args.value = selectValue;\n  args.onChange = (e: ChangeEvent<HTMLInputElement>) => setSelectValue(e.target.value);\n  if (!args.options) {\n    args.options = [{\n      id: 0,\n      value: 'Select...'\n    }, {\n      id: 1,\n      value: 'Option 1'\n    }, {\n      id: 2,\n      value: 'Option 2'\n    }, {\n      id: 3,\n      value: 'Option 3'\n    }, {\n      id: 4,\n      value: 'Option 4'\n    }];\n  }\n  return <Select {...args} />;\n}"},null===(_ChildrenOptions$para2=ChildrenOptions.parameters)||void 0===_ChildrenOptions$para2||null===(_ChildrenOptions$para2=_ChildrenOptions$para2.docs)||void 0===_ChildrenOptions$para2?void 0:_ChildrenOptions$para2.source)})}),MultipleSelect.parameters=_objectSpread(_objectSpread({},MultipleSelect.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_MultipleSelect$param=MultipleSelect.parameters)||void 0===_MultipleSelect$param?void 0:_MultipleSelect$param.docs),{},{source:_objectSpread({originalSource:"args => {\n  if (!args.options) {\n    args.options = [{\n      id: 0,\n      value: 'Select...'\n    }, {\n      id: 1,\n      value: 'Option 1'\n    }, {\n      id: 2,\n      value: 'Option 2'\n    }, {\n      id: 3,\n      value: 'Option 3'\n    }, {\n      id: 4,\n      value: 'Option 4'\n    }];\n  }\n  return <Select {...args} />;\n}"},null===(_MultipleSelect$param2=MultipleSelect.parameters)||void 0===_MultipleSelect$param2||null===(_MultipleSelect$param2=_MultipleSelect$param2.docs)||void 0===_MultipleSelect$param2?void 0:_MultipleSelect$param2.source)})}),MultipleSelectCheckbox.parameters=_objectSpread(_objectSpread({},MultipleSelectCheckbox.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_MultipleSelectCheckb=MultipleSelectCheckbox.parameters)||void 0===_MultipleSelectCheckb?void 0:_MultipleSelectCheckb.docs),{},{source:_objectSpread({originalSource:"(args: SelectProps) => {\n  const isMultiple = Boolean('SelectProps' in args && args.SelectProps?.multiple);\n  const [selectValue, setSelectValue] = useState<Array<string | number> | string | number>(isMultiple ? [0] : 0);\n  args.value = selectValue;\n  args.onChange = (e: ChangeEvent<HTMLInputElement>) => setSelectValue(e.target.value);\n  if (!args.options) {\n    args.options = [{\n      id: 0,\n      value: 'Select...'\n    }, {\n      id: 1,\n      value: 'Option 1'\n    }, {\n      id: 2,\n      value: 'Option 2'\n    }, {\n      id: 3,\n      value: 'Option 3'\n    }, {\n      id: 4,\n      value: 'Option 4'\n    }];\n  }\n  return <Select {...args} />;\n}"},null===(_MultipleSelectCheckb2=MultipleSelectCheckbox.parameters)||void 0===_MultipleSelectCheckb2||null===(_MultipleSelectCheckb2=_MultipleSelectCheckb2.docs)||void 0===_MultipleSelectCheckb2?void 0:_MultipleSelectCheckb2.source)})}),MultipleSelectOptionDivider.parameters=_objectSpread(_objectSpread({},MultipleSelectOptionDivider.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_MultipleSelectOption=MultipleSelectOptionDivider.parameters)||void 0===_MultipleSelectOption?void 0:_MultipleSelectOption.docs),{},{source:_objectSpread({originalSource:"args => {\n  if (!args.options) {\n    args.options = [{\n      id: 0,\n      value: 'Select...'\n    }, {\n      id: 1,\n      value: 'Option 1'\n    }, {\n      id: 2,\n      value: 'Option 2'\n    }, {\n      id: 3,\n      value: 'Option 3'\n    }, {\n      id: 4,\n      value: 'Option 4'\n    }];\n  }\n  return <Select {...args} />;\n}"},null===(_MultipleSelectOption2=MultipleSelectOptionDivider.parameters)||void 0===_MultipleSelectOption2||null===(_MultipleSelectOption2=_MultipleSelectOption2.docs)||void 0===_MultipleSelectOption2?void 0:_MultipleSelectOption2.source)})}),MultipleSelectOptionDescription.parameters=_objectSpread(_objectSpread({},MultipleSelectOptionDescription.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_MultipleSelectOption3=MultipleSelectOptionDescription.parameters)||void 0===_MultipleSelectOption3?void 0:_MultipleSelectOption3.docs),{},{source:_objectSpread({originalSource:"args => {\n  if (!args.options) {\n    args.options = [{\n      id: 0,\n      value: 'Select...'\n    }, {\n      id: 1,\n      value: 'Option 1'\n    }, {\n      id: 2,\n      value: 'Option 2'\n    }, {\n      id: 3,\n      value: 'Option 3'\n    }, {\n      id: 4,\n      value: 'Option 4'\n    }];\n  }\n  return <Select {...args} />;\n}"},null===(_MultipleSelectOption4=MultipleSelectOptionDescription.parameters)||void 0===_MultipleSelectOption4||null===(_MultipleSelectOption4=_MultipleSelectOption4.docs)||void 0===_MultipleSelectOption4?void 0:_MultipleSelectOption4.source)})}),MultipleSelectLargeWhite.parameters=_objectSpread(_objectSpread({},MultipleSelectLargeWhite.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_MultipleSelectLargeW=MultipleSelectLargeWhite.parameters)||void 0===_MultipleSelectLargeW?void 0:_MultipleSelectLargeW.docs),{},{source:_objectSpread({originalSource:"args => {\n  if (!args.options) {\n    args.options = [{\n      id: 0,\n      value: 'Select...'\n    }, {\n      id: 1,\n      value: 'Option 1'\n    }, {\n      id: 2,\n      value: 'Option 2'\n    }, {\n      id: 3,\n      value: 'Option 3'\n    }, {\n      id: 4,\n      value: 'Option 4'\n    }];\n  }\n  return <Select {...args} />;\n}"},null===(_MultipleSelectLargeW2=MultipleSelectLargeWhite.parameters)||void 0===_MultipleSelectLargeW2||null===(_MultipleSelectLargeW2=_MultipleSelectLargeW2.docs)||void 0===_MultipleSelectLargeW2?void 0:_MultipleSelectLargeW2.source)})})}}]);