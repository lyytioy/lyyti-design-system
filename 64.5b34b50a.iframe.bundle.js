"use strict";(self.webpackChunk_lyyti_design_system=self.webpackChunk_lyyti_design_system||[]).push([[64],{"./node_modules/@mui/base/unstable_useNumberInput/useNumberInput.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{h:()=>useNumberInput});var esm_extends=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/extends.js"),formatMuiErrorMessage=__webpack_require__("./node_modules/@mui/utils/formatMuiErrorMessage/formatMuiErrorMessage.js"),react=__webpack_require__("./node_modules/next/dist/compiled/react/index.js"),useForkRef=__webpack_require__("./node_modules/@mui/utils/useForkRef/useForkRef.js"),useId=__webpack_require__("./node_modules/@mui/utils/useId/useId.js"),extractEventHandlers=__webpack_require__("./node_modules/@mui/base/utils/extractEventHandlers.js");function areEqual(a,b){return a===b}const EMPTY_OBJECT={},NOOP=()=>{};function getControlledState(internalState,controlledProps){const augmentedState=(0,esm_extends.A)({},internalState);return Object.keys(controlledProps).forEach((key=>{void 0!==controlledProps[key]&&(augmentedState[key]=controlledProps[key])})),augmentedState}function useControllableReducer(parameters){const lastActionRef=react.useRef(null),{reducer,initialState,controlledProps=EMPTY_OBJECT,stateComparers=EMPTY_OBJECT,onStateChange=NOOP,actionContext,componentName=""}=parameters;react.useRef(controlledProps);const reducerWithControlledState=react.useCallback(((state,action)=>{lastActionRef.current=action;const controlledState=getControlledState(state,controlledProps);return reducer(controlledState,action)}),[controlledProps,reducer]),[nextState,dispatch]=react.useReducer(reducerWithControlledState,initialState),dispatchWithContext=react.useCallback((action=>{dispatch((0,esm_extends.A)({},action,{context:actionContext}))}),[actionContext]);return function useStateChangeDetection(parameters){const{nextState,initialState,stateComparers,onStateChange,controlledProps,lastActionRef}=parameters,internalPreviousStateRef=react.useRef(initialState);react.useEffect((()=>{if(null===lastActionRef.current)return;const previousState=getControlledState(internalPreviousStateRef.current,controlledProps);Object.keys(nextState).forEach((key=>{var _stateComparers$key;const stateComparer=null!=(_stateComparers$key=stateComparers[key])?_stateComparers$key:areEqual,nextStateItem=nextState[key],previousStateItem=previousState[key];var _event,_type;(null==previousStateItem&&null!=nextStateItem||null!=previousStateItem&&null==nextStateItem||null!=previousStateItem&&null!=nextStateItem&&!stateComparer(nextStateItem,previousStateItem))&&(null==onStateChange||onStateChange(null!=(_event=lastActionRef.current.event)?_event:null,key,nextStateItem,null!=(_type=lastActionRef.current.type)?_type:"",nextState))})),internalPreviousStateRef.current=nextState,lastActionRef.current=null}),[internalPreviousStateRef,nextState,lastActionRef,onStateChange,stateComparers,controlledProps])}({nextState,initialState,stateComparers:null!=stateComparers?stateComparers:EMPTY_OBJECT,onStateChange:null!=onStateChange?onStateChange:NOOP,controlledProps,lastActionRef}),[getControlledState(nextState,controlledProps),dispatchWithContext]}const FormControlContext=react.createContext(void 0);const NumberInputActionTypes={clamp:"numberInput:clamp",inputChange:"numberInput:inputChange",increment:"numberInput:increment",decrement:"numberInput:decrement",decrementToMin:"numberInput:decrementToMin",incrementToMax:"numberInput:incrementToMax",resetInputValue:"numberInput:resetInputValue"};var clamp=__webpack_require__("./node_modules/@mui/utils/clamp/clamp.js");function isNumber(val){return"number"==typeof val&&!Number.isNaN(val)&&Number.isFinite(val)}function getClampedValues(rawValue,context){const{min,max,step}=context,clampedValue=null===rawValue?null:function clampStepwise(val,min=Number.MIN_SAFE_INTEGER,max=Number.MAX_SAFE_INTEGER,stepProp=NaN){if(Number.isNaN(stepProp))return(0,clamp.A)(val,min,max);const step=stepProp||1,remainder=val%step,positivity=Math.sign(remainder);return Math.abs(remainder)>step/2?(0,clamp.A)(val+positivity*(step-Math.abs(remainder)),min,max):(0,clamp.A)(val-positivity*Math.abs(remainder),min,max)}(rawValue,min,max,step);return{value:clampedValue,inputValue:null===clampedValue?"":String(clampedValue)}}function handleStep(state,context,applyMultiplier,direction){const newValue=function stepValue(state,context,direction,multiplier){const{value}=state,{step=1,min,max}=context;return isNumber(value)?{up:value+(null!=step?step:1)*multiplier,down:value-(null!=step?step:1)*multiplier}[direction]:{up:null!=min?min:1,down:null!=max?max:-1}[direction]}(state,context,direction,applyMultiplier?context.shiftMultiplier:1),clampedValues=getClampedValues(newValue,context);return(0,esm_extends.A)({},state,clampedValues)}function handleToMinOrMax(state,context,to){const newValue=context[to];return isNumber(newValue)?(0,esm_extends.A)({},state,{value:newValue,inputValue:String(newValue)}):state}function numberInputReducer(state,action){const{type,context}=action;switch(type){case NumberInputActionTypes.clamp:return function handleClamp(state,context,inputValue){const{getInputValueAsString}=context,numberValueAsString=getInputValueAsString(inputValue),clampedValues=getClampedValues(""===numberValueAsString||"-"===numberValueAsString?null:parseInt(numberValueAsString,10),context);return(0,esm_extends.A)({},state,clampedValues)}(state,context,action.inputValue);case NumberInputActionTypes.inputChange:return function handleInputChange(state,context,inputValue){const{getInputValueAsString}=context,numberValueAsString=getInputValueAsString(inputValue);return numberValueAsString.match(/^-?\d+?$/)||""===numberValueAsString||"-"===numberValueAsString?(0,esm_extends.A)({},state,{inputValue:numberValueAsString}):state}(state,context,action.inputValue);case NumberInputActionTypes.increment:return handleStep(state,context,action.applyMultiplier,"up");case NumberInputActionTypes.decrement:return handleStep(state,context,action.applyMultiplier,"down");case NumberInputActionTypes.incrementToMax:return handleToMinOrMax(state,context,"max");case NumberInputActionTypes.decrementToMin:return handleToMinOrMax(state,context,"min");case NumberInputActionTypes.resetInputValue:return(0,esm_extends.A)({},state,{inputValue:String(state.value)});default:return state}}const SUPPORTED_KEYS=["ArrowUp","ArrowDown","PageUp","PageDown","Home","End"];function getInputValueAsString(v){return String(v?v.trim():v)}function useNumberInput(parameters){var _ref;const{min,max,step,shiftMultiplier=10,defaultValue:defaultValueProp,disabled:disabledProp=!1,error:errorProp=!1,onBlur,onInputChange,onFocus,onChange,required:requiredProp=!1,readOnly:readOnlyProp=!1,value:valueProp,inputRef:inputRefProp,inputId:inputIdProp,componentName="useNumberInput"}=parameters,formControlContext=function useFormControlContext(){return react.useContext(FormControlContext)}(),{current:isControlled}=react.useRef(null!=valueProp),handleInputRefWarning=react.useCallback((instance=>{0}),[]),inputRef=react.useRef(null),handleInputRef=(0,useForkRef.A)(inputRef,inputRefProp,handleInputRefWarning),inputId=(0,useId.A)(inputIdProp),[focused,setFocused]=react.useState(!1),handleStateChange=react.useCallback(((event,field,fieldValue,reason)=>{if("value"===field&&"string"!=typeof fieldValue)switch(reason){case"numberInput:clamp":case"numberInput:increment":case"numberInput:decrement":case"numberInput:incrementToMax":case"numberInput:decrementToMin":null==onChange||onChange(event,fieldValue)}}),[onChange]),numberInputActionContext=react.useMemo((()=>({min,max,step,shiftMultiplier,getInputValueAsString})),[min,max,step,shiftMultiplier]),initialValue=null!=(_ref=null!=valueProp?valueProp:defaultValueProp)?_ref:null,initialState={value:initialValue,inputValue:initialValue?String(initialValue):""},controlledState=react.useMemo((()=>({value:valueProp})),[valueProp]),[state,dispatch]=useControllableReducer({reducer:numberInputReducer,controlledProps:controlledState,initialState,onStateChange:handleStateChange,actionContext:react.useMemo((()=>numberInputActionContext),[numberInputActionContext]),componentName}),{value,inputValue}=state;react.useEffect((()=>{!formControlContext&&disabledProp&&focused&&(setFocused(!1),null==onBlur||onBlur())}),[formControlContext,disabledProp,focused,onBlur]),react.useEffect((()=>{isControlled&&isNumber(value)&&dispatch({type:NumberInputActionTypes.resetInputValue})}),[value,dispatch,isControlled]);const createHandleInputChange=otherHandlers=>event=>{var _formControlContext$o2,_otherHandlers$onInpu;if(!isControlled&&null===event.target)throw new Error((0,formatMuiErrorMessage.A)(17));null==formControlContext||null==(_formControlContext$o2=formControlContext.onChange)||_formControlContext$o2.call(formControlContext,event),null==(_otherHandlers$onInpu=otherHandlers.onInputChange)||_otherHandlers$onInpu.call(otherHandlers,event),event.defaultMuiPrevented||event.defaultPrevented||dispatch({type:NumberInputActionTypes.inputChange,event,inputValue:event.currentTarget.value})},createHandleBlur=otherHandlers=>event=>{var _otherHandlers$onBlur;null==formControlContext||formControlContext.onBlur(),null==(_otherHandlers$onBlur=otherHandlers.onBlur)||_otherHandlers$onBlur.call(otherHandlers,event),event.defaultMuiPrevented||event.defaultPrevented||(dispatch({type:NumberInputActionTypes.clamp,event,inputValue:event.currentTarget.value}),setFocused(!1))},handleStep=direction=>event=>{const applyMultiplier=Boolean(event.shiftKey),actionType={up:NumberInputActionTypes.increment,down:NumberInputActionTypes.decrement}[direction];dispatch({type:actionType,event,applyMultiplier})},createHandleKeyDown=otherHandlers=>event=>{var _otherHandlers$onKeyD;if(null==(_otherHandlers$onKeyD=otherHandlers.onKeyDown)||_otherHandlers$onKeyD.call(otherHandlers,event),!event.defaultMuiPrevented&&!event.defaultPrevented)switch(SUPPORTED_KEYS.includes(event.key)&&event.preventDefault(),event.key){case"ArrowUp":dispatch({type:NumberInputActionTypes.increment,event,applyMultiplier:!!event.shiftKey});break;case"ArrowDown":dispatch({type:NumberInputActionTypes.decrement,event,applyMultiplier:!!event.shiftKey});break;case"PageUp":dispatch({type:NumberInputActionTypes.increment,event,applyMultiplier:!0});break;case"PageDown":dispatch({type:NumberInputActionTypes.decrement,event,applyMultiplier:!0});break;case"Home":dispatch({type:NumberInputActionTypes.incrementToMax,event});break;case"End":dispatch({type:NumberInputActionTypes.decrementToMin,event})}},handleStepperButtonMouseDown=event=>{event.preventDefault(),inputRef.current&&inputRef.current.focus()},stepperButtonCommonProps={"aria-controls":inputId,tabIndex:-1},isIncrementDisabled=disabledProp||!!isNumber(value)&&value>=(null!=max?max:Number.MAX_SAFE_INTEGER),isDecrementDisabled=disabledProp||!!isNumber(value)&&value<=(null!=min?min:Number.MIN_SAFE_INTEGER);return{disabled:disabledProp,error:errorProp,focused,formControlContext,getInputProps:(externalProps={})=>{var _ref2;const propsEventHandlers={onBlur,onFocus,onChange:onInputChange},externalEventHandlers=(0,esm_extends.A)({},propsEventHandlers,(0,extractEventHandlers.h)(externalProps,["onClick"])),mergedEventHandlers=(0,esm_extends.A)({},externalEventHandlers,{onFocus:(otherHandlers=externalEventHandlers,event=>{var _otherHandlers$onFocu,_formControlContext$o;(null==(_otherHandlers$onFocu=otherHandlers.onFocus)||_otherHandlers$onFocu.call(otherHandlers,event),event.defaultMuiPrevented||event.defaultPrevented)||(formControlContext&&formControlContext.onFocus&&(null==formControlContext||null==(_formControlContext$o=formControlContext.onFocus)||_formControlContext$o.call(formControlContext)),setFocused(!0))}),onChange:createHandleInputChange((0,esm_extends.A)({},externalEventHandlers,{onInputChange:externalEventHandlers.onChange})),onBlur:createHandleBlur(externalEventHandlers),onKeyDown:createHandleKeyDown(externalEventHandlers)});var otherHandlers;const displayValue=null!=(_ref2=focused?inputValue:value)?_ref2:"";return delete externalProps.onInputChange,(0,esm_extends.A)({type:"text",id:inputId,"aria-invalid":errorProp||void 0,defaultValue:void 0,value:displayValue,"aria-valuenow":displayValue,"aria-valuetext":String(displayValue),"aria-valuemin":min,"aria-valuemax":max,autoComplete:"off",autoCorrect:"off",spellCheck:"false",required:requiredProp,readOnly:readOnlyProp,"aria-disabled":disabledProp,disabled:disabledProp},externalProps,{ref:handleInputRef},mergedEventHandlers)},getIncrementButtonProps:(externalProps={})=>(0,esm_extends.A)({},externalProps,stepperButtonCommonProps,{disabled:isIncrementDisabled,"aria-disabled":isIncrementDisabled,onMouseDown:handleStepperButtonMouseDown,onClick:handleStep("up")}),getDecrementButtonProps:(externalProps={})=>(0,esm_extends.A)({},externalProps,stepperButtonCommonProps,{disabled:isDecrementDisabled,"aria-disabled":isDecrementDisabled,onMouseDown:handleStepperButtonMouseDown,onClick:handleStep("down")}),getRootProps:(externalProps={})=>{const propsEventHandlers=(0,extractEventHandlers.h)(parameters,["onBlur","onInputChange","onFocus","onChange"]),externalEventHandlers=(0,esm_extends.A)({},propsEventHandlers,(0,extractEventHandlers.h)(externalProps));return(0,esm_extends.A)({},externalProps,externalEventHandlers,{onClick:(otherHandlers=externalEventHandlers,event=>{var _otherHandlers$onClic;null==(_otherHandlers$onClic=otherHandlers.onClick)||_otherHandlers$onClic.call(otherHandlers,event),event.defaultMuiPrevented||event.defaultPrevented||inputRef.current&&event.currentTarget===event.target&&inputRef.current.focus()})});var otherHandlers},required:requiredProp,value,inputValue,isIncrementDisabled,isDecrementDisabled}}}}]);